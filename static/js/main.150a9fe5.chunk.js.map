{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleAlphabetSort","setState","ALPHABET","handleLengthSort","LENGTH","handleReverse","handleReset","getReorderedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","this","reorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,iBAAmB,WACjB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,EA2BEQ,kBAAoB,SAClBC,EADkB,GAGd,IADFV,EACC,EADDA,SAAUD,EACT,EADSA,WAENY,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,IAAK,WACH,OAAQa,EAAME,cAAcD,GAE9B,IAAK,SACH,OAAQD,EAAMG,OAASF,EAAME,OAE/B,QACE,OAAO,MAITjB,GACFY,EAAaM,UAGRN,GAlDX,4CAqDE,WACE,MAAiCO,KAAKpB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZoB,EAAiBD,KAAKT,kBAAkBb,EAAiBsB,KAAKpB,OAEpE,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACe,aAAbpB,EACI,iBACA,0BAENsB,QAASJ,KAAKhB,mBAPhB,iCAYA,wBACEmB,KAAK,SACLD,UACe,WAAbpB,EACI,oBACA,6BAENsB,QAASJ,KAAKb,iBAPhB,4BAWA,wBACEgB,KAAK,SACLD,UACErB,EACI,oBACA,6BAENuB,QAASJ,KAAKX,cAPhB,sBAYER,GAAcC,IAAaL,EAASM,OACpC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASJ,KAAKV,YAHhB,sBAUJ,6BACE,6BACGW,EAAeI,KACd,SAAAC,GAAI,OACF,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA/GxC,GAAyBC,IAAMC,WCzB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.150a9fe5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: ReorderOptions = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleAlphabetSort = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleLengthSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case 'ALPHABET':\n          return (good1.localeCompare(good2));\n\n        case 'LENGTH':\n          return (good1.length - good2.length);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const reorderedGoods = this.getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType === 'ALPHABET'\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.handleAlphabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              sortType === 'LENGTH'\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            className={\n              isReversed\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(\n              good => (\n                <li data-cy=\"Good\" key={good}>\n                  {good}\n                </li>\n              ),\n            )}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}